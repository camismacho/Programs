State 27 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: functions

    2 functions: function functions
    3          | %empty

    4 function: ID LPAREN RPAREN LBRACE statements RBRACE

    5 statements: statement statements
    6           | %empty

    7 statement: funcall

    8 funcall: ID LPAREN arguments RPAREN SEMICOLON

    9 arguments: argument COMMA arguments
   10          | argument
   11          | %empty

   12 argument: STRING
   13         | expression

   14 expression: NUMBER
   15           | expression PLUS expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <ival> (258) 14
    COMMA <ival> (259) 9
    SEMICOLON <ival> (260) 8
    LPAREN <ival> (261) 4 8
    RPAREN <ival> (262) 4 8
    LBRACE <ival> (263) 4
    RBRACE <ival> (264) 4
    PLUS <ival> (265) 15
    ID <str> (266) 4 8
    STRING <str> (267) 12


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    prog (14)
        on left: 1
        on right: 0
    functions <str> (15)
        on left: 2 3
        on right: 1 2
    function <str> (16)
        on left: 4
        on right: 2
    statements <str> (17)
        on left: 5 6
        on right: 4 5
    statement <str> (18)
        on left: 7
        on right: 5
    funcall <str> (19)
        on left: 8
        on right: 7
    arguments <str> (20)
        on left: 9 10 11
        on right: 8 9
    argument <str> (21)
        on left: 12 13
        on right: 9 10
    expression <str> (22)
        on left: 14 15
        on right: 13 15


State 0

    0 $accept: . prog $end

    ID  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog       go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: ID . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 5


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


State 3

    1 prog: functions .

    $default  reduce using rule 1 (prog)


State 4

    2 functions: function . functions

    ID  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: ID LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 8


State 6

    0 $accept: prog $end .

    $default  accept


State 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 8

    4 function: ID LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 9


State 9

    4 function: ID LPAREN RPAREN LBRACE . statements RBRACE

    ID  shift, and go to state 10

    $default  reduce using rule 6 (statements)

    statements  go to state 11
    statement   go to state 12
    funcall     go to state 13


State 10

    8 funcall: ID . LPAREN arguments RPAREN SEMICOLON

    LPAREN  shift, and go to state 14


State 11

    4 function: ID LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 15


State 12

    5 statements: statement . statements

    ID  shift, and go to state 10

    $default  reduce using rule 6 (statements)

    statements  go to state 16
    statement   go to state 12
    funcall     go to state 13


State 13

    7 statement: funcall .

    $default  reduce using rule 7 (statement)


State 14

    8 funcall: ID LPAREN . arguments RPAREN SEMICOLON

    NUMBER  shift, and go to state 17
    STRING  shift, and go to state 18

    $default  reduce using rule 11 (arguments)

    arguments   go to state 19
    argument    go to state 20
    expression  go to state 21


State 15

    4 function: ID LPAREN RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 4 (function)


State 16

    5 statements: statement statements .

    $default  reduce using rule 5 (statements)


State 17

   14 expression: NUMBER .

    $default  reduce using rule 14 (expression)


State 18

   12 argument: STRING .

    $default  reduce using rule 12 (argument)


State 19

    8 funcall: ID LPAREN arguments . RPAREN SEMICOLON

    RPAREN  shift, and go to state 22


State 20

    9 arguments: argument . COMMA arguments
   10          | argument .

    COMMA  shift, and go to state 23

    $default  reduce using rule 10 (arguments)


State 21

   13 argument: expression .
   15 expression: expression . PLUS expression

    PLUS  shift, and go to state 24

    $default  reduce using rule 13 (argument)


State 22

    8 funcall: ID LPAREN arguments RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 25


State 23

    9 arguments: argument COMMA . arguments

    NUMBER  shift, and go to state 17
    STRING  shift, and go to state 18

    $default  reduce using rule 11 (arguments)

    arguments   go to state 26
    argument    go to state 20
    expression  go to state 21


State 24

   15 expression: expression PLUS . expression

    NUMBER  shift, and go to state 17

    expression  go to state 27


State 25

    8 funcall: ID LPAREN arguments RPAREN SEMICOLON .

    $default  reduce using rule 8 (funcall)


State 26

    9 arguments: argument COMMA arguments .

    $default  reduce using rule 9 (arguments)


State 27

   15 expression: expression . PLUS expression
   15           | expression PLUS expression .

    PLUS  shift, and go to state 24

    PLUS      [reduce using rule 15 (expression)]
    $default  reduce using rule 15 (expression)
